//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIITS.DTLMS.BL.TRM_Service
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "TRM_Service.IService1")]
    public interface IService1
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/GetSanctionedstatus", ReplyAction = "http://tempuri.org/IService1/GetSanctionedstatusResponse")]
        string GetSanctionedstatus(string EstimateNo, string autoreferencenumber, string officecode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/GetSanctionedstatus", ReplyAction = "http://tempuri.org/IService1/GetSanctionedstatusResponse")]
        System.Threading.Tasks.Task<string> GetSanctionedstatusAsync(string EstimateNo, string autoreferencenumber, string officecode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/GetAutoreferencetrms", ReplyAction = "http://tempuri.org/IService1/GetAutoreferencetrmsResponse")]
        System.Data.DataSet GetAutoreferencetrms(string AccessCode, string officecode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/GetAutoreferencetrms", ReplyAction = "http://tempuri.org/IService1/GetAutoreferencetrmsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAutoreferencetrmsAsync(string AccessCode, string officecode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendestimateDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendestimateDetailstoTrmsResponse")]
        string SendestimateDetailstoTrms(string AccessCode, string EstimationAutogenerate, string EstimateDate, double TotalWorkOrderCost, string autoreferencenumber, string offcode, string strLoggedUser, string Wodesc);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendestimateDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendestimateDetailstoTrmsResponse")]
        System.Threading.Tasks.Task<string> SendestimateDetailstoTrmsAsync(string AccessCode, string EstimationAutogenerate, string EstimateDate, double TotalWorkOrderCost, string autoreferencenumber, string offcode, string strLoggedUser, string Wodesc);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/Applicationdet", ReplyAction = "http://tempuri.org/IService1/ApplicationdetResponse")]
        System.Data.DataSet Applicationdet(string autoreferencenumber);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/Applicationdet", ReplyAction = "http://tempuri.org/IService1/ApplicationdetResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ApplicationdetAsync(string autoreferencenumber);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/TrmsConnection", ReplyAction = "http://tempuri.org/IService1/TrmsConnectionResponse")]
        System.Data.DataSet TrmsConnection(string applicantrefid);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/TrmsConnection", ReplyAction = "http://tempuri.org/IService1/TrmsConnectionResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> TrmsConnectionAsync(string applicantrefid);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/Savecrcomplete", ReplyAction = "http://tempuri.org/IService1/SavecrcompleteResponse")]
        string Savecrcomplete(string wocrflag, string trmsno, string wonumber, string wodate, string estimatenumber, string estimatedate, string indentno, string invoicenumber, string woautorefid, string indentdate);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/Savecrcomplete", ReplyAction = "http://tempuri.org/IService1/SavecrcompleteResponse")]
        System.Threading.Tasks.Task<string> SavecrcompleteAsync(string wocrflag, string trmsno, string wonumber, string wodate, string estimatenumber, string estimatedate, string indentno, string invoicenumber, string woautorefid, string indentdate);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendDTCDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendDTCDetailstoTrmsResponse")]
        string SendDTCDetailstoTrms(string DTCName, string DTCCode, string FeederCode, string Longitude, string Latitude, string OffCode, string Capacity, string dtccommisiondate, string Dtcmeters, string Meterstatus, string Ctratio, string Wiring, string Modem);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendDTCDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendDTCDetailstoTrmsResponse")]
        System.Threading.Tasks.Task<string> SendDTCDetailstoTrmsAsync(string DTCName, string DTCCode, string FeederCode, string Longitude, string Latitude, string OffCode, string Capacity, string dtccommisiondate, string Dtcmeters, string Meterstatus, string Ctratio, string Wiring, string Modem);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendFeederDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendFeederDetailstoTrmsResponse")]
        string SendFeederDetailstoTrms(string FeederCode, string FeederType, string FeederCap, string FeederName, string FeederMeterCap, string OffCode, string FeederST_LocCode, string FeederSTId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendFeederDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendFeederDetailstoTrmsResponse")]
        System.Threading.Tasks.Task<string> SendFeederDetailstoTrmsAsync(string FeederCode, string FeederType, string FeederCap, string FeederName, string FeederMeterCap, string OffCode, string FeederST_LocCode, string FeederSTId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendFeederBifercationDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendFeederBifercationDetailstoTrmsResponse")]
        string SendFeederBifercationDetailstoTrms(string OldFeederCode, string NewFeederCode, string OldDTCCode, string NewDTCCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendFeederBifercationDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendFeederBifercationDetailstoTrmsResponse")]
        System.Threading.Tasks.Task<string> SendFeederBifercationDetailstoTrmsAsync(string OldFeederCode, string NewFeederCode, string OldDTCCode, string NewDTCCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendStationDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendStationDetailstoTrmsResponse")]
        string SendStationDetailstoTrms(string StationName, string StationCode, string Stc_Cap_ID, string Mobile_NO, string EmailID, string Description, string Entry_Auth, string OffCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendStationDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendStationDetailstoTrmsResponse")]
        System.Threading.Tasks.Task<string> SendStationDetailstoTrmsAsync(string StationName, string StationCode, string Stc_Cap_ID, string Mobile_NO, string EmailID, string Description, string Entry_Auth, string OffCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendupdateFeederDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendupdateFeederDetailstoTrmsResponse")]
        string SendupdateFeederDetailstoTrms(string FeederCode, string FeederType, string FeederCap, string FeederName, string OffCode, string FeederSTId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendupdateFeederDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendupdateFeederDetailstoTrmsResponse")]
        System.Threading.Tasks.Task<string> SendupdateFeederDetailstoTrmsAsync(string FeederCode, string FeederType, string FeederCap, string FeederName, string OffCode, string FeederSTId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendupdateStationDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendupdateStationDetailstoTrmsResponse")]
        string SendupdateStationDetailstoTrms(string StationName, string StationCode, string Stc_Cap_ID, string Mobile_NO, string EmailID, string Description, string Entry_Auth, string OffCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendupdateStationDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendupdateStationDetailstoTrmsResponse")]
        System.Threading.Tasks.Task<string> SendupdateStationDetailstoTrmsAsync(string StationName, string StationCode, string Stc_Cap_ID, string Mobile_NO, string EmailID, string Description, string Entry_Auth, string OffCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendupdateDTCDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendupdateDTCDetailstoTrmsResponse")]
        string SendupdateDTCDetailstoTrms(string DTCName, string DTCCode, string FeederCode, string Longitude, string Latitude, string OffCode, string Capacity, string dtccommisiondate, string Dtcmeters, string Meterstatus, string Ctratio, string Wiring, string Modem, string MeterSlNo, string MeterMake, string MeterRecording, string MeterMftYear);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendupdateDTCDetailstoTrms", ReplyAction = "http://tempuri.org/IService1/SendupdateDTCDetailstoTrmsResponse")]
        System.Threading.Tasks.Task<string> SendupdateDTCDetailstoTrmsAsync(string DTCName, string DTCCode, string FeederCode, string Longitude, string Latitude, string OffCode, string Capacity, string dtccommisiondate, string Dtcmeters, string Meterstatus, string Ctratio, string Wiring, string Modem, string MeterSlNo, string MeterMake, string MeterRecording, string MeterMftYear);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendCapacitytoTrms", ReplyAction = "http://tempuri.org/IService1/SendCapacitytoTrmsResponse")]
        string SendCapacitytoTrms(string Capacity, string dtccode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/SendCapacitytoTrms", ReplyAction = "http://tempuri.org/IService1/SendCapacitytoTrmsResponse")]
        System.Threading.Tasks.Task<string> SendCapacitytoTrmsAsync(string Capacity, string dtccode);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : IIITS.DTLMS.BL.TRM_Service.IService1, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<IIITS.DTLMS.BL.TRM_Service.IService1>, IIITS.DTLMS.BL.TRM_Service.IService1
    {

        public Service1Client()
        {
        }

        public Service1Client(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public Service1Client(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public string GetSanctionedstatus(string EstimateNo, string autoreferencenumber, string officecode)
        {
            return base.Channel.GetSanctionedstatus(EstimateNo, autoreferencenumber, officecode);
        }

        public System.Threading.Tasks.Task<string> GetSanctionedstatusAsync(string EstimateNo, string autoreferencenumber, string officecode)
        {
            return base.Channel.GetSanctionedstatusAsync(EstimateNo, autoreferencenumber, officecode);
        }

        public System.Data.DataSet GetAutoreferencetrms(string AccessCode, string officecode)
        {
            return base.Channel.GetAutoreferencetrms(AccessCode, officecode);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetAutoreferencetrmsAsync(string AccessCode, string officecode)
        {
            return base.Channel.GetAutoreferencetrmsAsync(AccessCode, officecode);
        }

        public string SendestimateDetailstoTrms(string AccessCode, string EstimationAutogenerate, string EstimateDate, double TotalWorkOrderCost, string autoreferencenumber, string offcode, string strLoggedUser, string Wodesc)
        {
            return base.Channel.SendestimateDetailstoTrms(AccessCode, EstimationAutogenerate, EstimateDate, TotalWorkOrderCost, autoreferencenumber, offcode, strLoggedUser, Wodesc);
        }

        public System.Threading.Tasks.Task<string> SendestimateDetailstoTrmsAsync(string AccessCode, string EstimationAutogenerate, string EstimateDate, double TotalWorkOrderCost, string autoreferencenumber, string offcode, string strLoggedUser, string Wodesc)
        {
            return base.Channel.SendestimateDetailstoTrmsAsync(AccessCode, EstimationAutogenerate, EstimateDate, TotalWorkOrderCost, autoreferencenumber, offcode, strLoggedUser, Wodesc);
        }

        public System.Data.DataSet Applicationdet(string autoreferencenumber)
        {
            return base.Channel.Applicationdet(autoreferencenumber);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> ApplicationdetAsync(string autoreferencenumber)
        {
            return base.Channel.ApplicationdetAsync(autoreferencenumber);
        }

        public System.Data.DataSet TrmsConnection(string applicantrefid)
        {
            return base.Channel.TrmsConnection(applicantrefid);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> TrmsConnectionAsync(string applicantrefid)
        {
            return base.Channel.TrmsConnectionAsync(applicantrefid);
        }

        public string Savecrcomplete(string wocrflag, string trmsno, string wonumber, string wodate, string estimatenumber, string estimatedate, string indentno, string invoicenumber, string woautorefid, string indentdate)
        {
            return base.Channel.Savecrcomplete(wocrflag, trmsno, wonumber, wodate, estimatenumber, estimatedate, indentno, invoicenumber, woautorefid, indentdate);
        }

        public System.Threading.Tasks.Task<string> SavecrcompleteAsync(string wocrflag, string trmsno, string wonumber, string wodate, string estimatenumber, string estimatedate, string indentno, string invoicenumber, string woautorefid, string indentdate)
        {
            return base.Channel.SavecrcompleteAsync(wocrflag, trmsno, wonumber, wodate, estimatenumber, estimatedate, indentno, invoicenumber, woautorefid, indentdate);
        }

        public string SendDTCDetailstoTrms(string DTCName, string DTCCode, string FeederCode, string Longitude, string Latitude, string OffCode, string Capacity, string dtccommisiondate, string Dtcmeters, string Meterstatus, string Ctratio, string Wiring, string Modem)
        {
            return base.Channel.SendDTCDetailstoTrms(DTCName, DTCCode, FeederCode, Longitude, Latitude, OffCode, Capacity, dtccommisiondate, Dtcmeters, Meterstatus, Ctratio, Wiring, Modem);
        }

        public System.Threading.Tasks.Task<string> SendDTCDetailstoTrmsAsync(string DTCName, string DTCCode, string FeederCode, string Longitude, string Latitude, string OffCode, string Capacity, string dtccommisiondate, string Dtcmeters, string Meterstatus, string Ctratio, string Wiring, string Modem)
        {
            return base.Channel.SendDTCDetailstoTrmsAsync(DTCName, DTCCode, FeederCode, Longitude, Latitude, OffCode, Capacity, dtccommisiondate, Dtcmeters, Meterstatus, Ctratio, Wiring, Modem);
        }

        public string SendFeederDetailstoTrms(string FeederCode, string FeederType, string FeederCap, string FeederName, string FeederMeterCap, string OffCode, string FeederST_LocCode, string FeederSTId)
        {
            return base.Channel.SendFeederDetailstoTrms(FeederCode, FeederType, FeederCap, FeederName, FeederMeterCap, OffCode, FeederST_LocCode, FeederSTId);
        }

        public System.Threading.Tasks.Task<string> SendFeederDetailstoTrmsAsync(string FeederCode, string FeederType, string FeederCap, string FeederName, string FeederMeterCap, string OffCode, string FeederST_LocCode, string FeederSTId)
        {
            return base.Channel.SendFeederDetailstoTrmsAsync(FeederCode, FeederType, FeederCap, FeederName, FeederMeterCap, OffCode, FeederST_LocCode, FeederSTId);
        }

        public string SendFeederBifercationDetailstoTrms(string OldFeederCode, string NewFeederCode, string OldDTCCode, string NewDTCCode)
        {
            return base.Channel.SendFeederBifercationDetailstoTrms(OldFeederCode, NewFeederCode, OldDTCCode, NewDTCCode);
        }

        public System.Threading.Tasks.Task<string> SendFeederBifercationDetailstoTrmsAsync(string OldFeederCode, string NewFeederCode, string OldDTCCode, string NewDTCCode)
        {
            return base.Channel.SendFeederBifercationDetailstoTrmsAsync(OldFeederCode, NewFeederCode, OldDTCCode, NewDTCCode);
        }

        public string SendStationDetailstoTrms(string StationName, string StationCode, string Stc_Cap_ID, string Mobile_NO, string EmailID, string Description, string Entry_Auth, string OffCode)
        {
            return base.Channel.SendStationDetailstoTrms(StationName, StationCode, Stc_Cap_ID, Mobile_NO, EmailID, Description, Entry_Auth, OffCode);
        }

        public System.Threading.Tasks.Task<string> SendStationDetailstoTrmsAsync(string StationName, string StationCode, string Stc_Cap_ID, string Mobile_NO, string EmailID, string Description, string Entry_Auth, string OffCode)
        {
            return base.Channel.SendStationDetailstoTrmsAsync(StationName, StationCode, Stc_Cap_ID, Mobile_NO, EmailID, Description, Entry_Auth, OffCode);
        }

        public string SendupdateFeederDetailstoTrms(string FeederCode, string FeederType, string FeederCap, string FeederName, string OffCode, string FeederSTId)
        {
            return base.Channel.SendupdateFeederDetailstoTrms(FeederCode, FeederType, FeederCap, FeederName, OffCode, FeederSTId);
        }

        public System.Threading.Tasks.Task<string> SendupdateFeederDetailstoTrmsAsync(string FeederCode, string FeederType, string FeederCap, string FeederName, string OffCode, string FeederSTId)
        {
            return base.Channel.SendupdateFeederDetailstoTrmsAsync(FeederCode, FeederType, FeederCap, FeederName, OffCode, FeederSTId);
        }

        public string SendupdateStationDetailstoTrms(string StationName, string StationCode, string Stc_Cap_ID, string Mobile_NO, string EmailID, string Description, string Entry_Auth, string OffCode)
        {
            return base.Channel.SendupdateStationDetailstoTrms(StationName, StationCode, Stc_Cap_ID, Mobile_NO, EmailID, Description, Entry_Auth, OffCode);
        }

        public System.Threading.Tasks.Task<string> SendupdateStationDetailstoTrmsAsync(string StationName, string StationCode, string Stc_Cap_ID, string Mobile_NO, string EmailID, string Description, string Entry_Auth, string OffCode)
        {
            return base.Channel.SendupdateStationDetailstoTrmsAsync(StationName, StationCode, Stc_Cap_ID, Mobile_NO, EmailID, Description, Entry_Auth, OffCode);
        }

        public string SendupdateDTCDetailstoTrms(string DTCName, string DTCCode, string FeederCode, string Longitude, string Latitude, string OffCode, string Capacity, string dtccommisiondate, string Dtcmeters, string Meterstatus, string Ctratio, string Wiring, string Modem, string MeterSlNo, string MeterMake, string MeterRecording, string MeterMftYear)
        {
            return base.Channel.SendupdateDTCDetailstoTrms(DTCName, DTCCode, FeederCode, Longitude, Latitude, OffCode, Capacity, dtccommisiondate, Dtcmeters, Meterstatus, Ctratio, Wiring, Modem, MeterSlNo, MeterMake, MeterRecording, MeterMftYear);
        }

        public System.Threading.Tasks.Task<string> SendupdateDTCDetailstoTrmsAsync(string DTCName, string DTCCode, string FeederCode, string Longitude, string Latitude, string OffCode, string Capacity, string dtccommisiondate, string Dtcmeters, string Meterstatus, string Ctratio, string Wiring, string Modem, string MeterSlNo, string MeterMake, string MeterRecording, string MeterMftYear)
        {
            return base.Channel.SendupdateDTCDetailstoTrmsAsync(DTCName, DTCCode, FeederCode, Longitude, Latitude, OffCode, Capacity, dtccommisiondate, Dtcmeters, Meterstatus, Ctratio, Wiring, Modem, MeterSlNo, MeterMake, MeterRecording, MeterMftYear);
        }

        public string SendCapacitytoTrms(string Capacity, string dtccode)
        {
            return base.Channel.SendCapacitytoTrms(Capacity, dtccode);
        }

        public System.Threading.Tasks.Task<string> SendCapacitytoTrmsAsync(string Capacity, string dtccode)
        {
            return base.Channel.SendCapacitytoTrmsAsync(Capacity, dtccode);
        }
    }
}
